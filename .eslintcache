[{"/Users/ajmalshah/buz/src/index.js":"1","/Users/ajmalshah/buz/src/reportWebVitals.js":"2","/Users/ajmalshah/buz/src/App.js":"3","/Users/ajmalshah/buz/src/components/Button.js":"4","/Users/ajmalshah/buz/src/components/Channel.js":"5","/Users/ajmalshah/buz/src/components/Message.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":2969,"mtime":1610808800338,"results":"10","hashOfConfig":"8"},{"size":255,"mtime":1610809005689,"results":"11","hashOfConfig":"8"},{"size":2876,"mtime":1610809218578,"results":"12","hashOfConfig":"8"},{"size":2253,"mtime":1610809060928,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1xxmmjl",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ajmalshah/buz/src/index.js",[],["29","30"],"/Users/ajmalshah/buz/src/reportWebVitals.js",[],"/Users/ajmalshah/buz/src/App.js",["31"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"./components/Button\";\nimport Channel from \"./components/Channel\";\nimport \"./App.css\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(1),\n    color: \"blue\",\n    textAlign: \"center\",\n    height: \"100vh\",\n  },\n}));\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyB9Zh-j_0ORyoLTKTm5CmmAdsEl698tvJg\",\n  authDomain: \"buzchat-bcf23.firebaseapp.com\",\n  projectId: \"buzchat-bcf23\",\n  storageBucket: \"buzchat-bcf23.appspot.com\",\n  messagingSenderId: \"640695160081\",\n  appId: \"1:640695160081:web:978c7655b323ab0a0590b0\",\n  measurementId: \"G-YDMVJ48QEC\",\n});\n\nconst auth = firebase.auth();\nconst db = firebase.firestore();\nfunction App() {\n  const classes = useStyles();\n  const [user, setUser] = useState(() => auth.currentUser);\n  const [initializing, setInitializing] = useState(true);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(null);\n      }\n      if (initializing) {\n        setInitializing(false);\n      }\n    });\n    return unsubscribe;\n  }, []);\n  const signInWithGoogle = async () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n\n    auth.useDeviceLanguage();\n    try {\n      await auth.signInWithPopup(provider);\n      console.log(\"hi\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const signOut = async () => {\n    try {\n      await firebase.auth().signOut();\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  if (initializing)\n    return (\n      <p style={{ color: \"white\", textAlign: \"center\" }}>Loading chat..</p>\n    );\n\n  return (\n    <div style={{ color: \"black\" }}>\n      {user ? (\n        <>\n          <div className=\"navbar\">\n            <ul>\n              <li>\n                {\" \"}\n                <h2>BuzzChat</h2>\n              </li>\n\n              <li className=\"signOut\">\n                <Button onClick={signOut}> Sign out </Button>\n              </li>\n            </ul>\n          </div>\n          <br />\n\n          <Channel user={user} db={db} />\n        </>\n      ) : (\n        <Grid container spacing={1} justify=\"center\">\n          <Grid item xs={11} sm={6}>\n            <Paper className={classes.paper}>\n              <div className=\"signInButton\">\n                <h1 className=\"signInHeader\">Welcome to BuzChat</h1>\n                <Button className=\"signInButton\" onClick={signInWithGoogle}>\n                  {\" \"}\n                  Sign in with google{\" \"}\n                </Button>\n              </div>\n            </Paper>\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/ajmalshah/buz/src/components/Button.js",[],"/Users/ajmalshah/buz/src/components/Channel.js",["32"],"import React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase/app\";\nimport Message from \"./Message\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(1),\n    backgroundColor: \"transparent\",\n\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction Channel({ user, db }) {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  const [color, setColor] = useState(\"\");\n\n  const { uid, displayName, photoURL } = user;\n  useEffect(() => {\n    var messageBody = document.querySelector(\"#messageBody\");\n    messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;\n    if (db) {\n      const unsubscribe = db\n        .collection(\"messages\")\n        .orderBy(\"createdAt\")\n        .limit(100)\n        .onSnapshot((querySnapshot) => {\n          const data = querySnapshot.docs.map((doc) => ({\n            ...doc.data(),\n            id: doc.id,\n          }));\n          setMessages(data);\n          console.log(\"*\", messages);\n        });\n      return unsubscribe;\n    }\n  }, [db]);\n\n  const handleOnChange = (e) => {\n    setNewMessage(e.target.value);\n  };\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    const colors = [\n      { color: \"red\" },\n      { color: \"green\" },\n      { color: \"blue\" },\n      { color: \"yellow\" },\n    ];\n\n    colors.map((color) => setColor(color));\n\n    if (db) {\n      db.collection(\"messages\").add({\n        text: newMessage,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n        uid,\n        displayName,\n        photoURL,\n        color,\n      });\n    }\n  };\n  const classes = useStyles();\n  return (\n    <>\n      <div className=\"messageScroller\" id=\"messageBody\">\n        {messages.map((message) => (\n          <div key={message.id}>\n            {\" \"}\n            <Message {...message} />\n          </div>\n        ))}\n      </div>\n\n      <Grid container spacing={1} justify=\"center\">\n        <Grid item xs={12} sm={6}>\n          <Paper className={classes.paper}>\n            <form onSubmit={handleOnSubmit} className=\"formContainer\">\n              <input\n                className=\"inputField\"\n                type=\"text\"\n                name=\"message\"\n                value={newMessage}\n                onChange={handleOnChange}\n                placeholder=\"Enter you messages\"\n              />\n              <button\n                className=\"sendButton\"\n                type=\"submit\"\n                disabled={!newMessage}\n              >\n                {\" \"}\n                Sent\n              </button>\n            </form>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default Channel;\n","/Users/ajmalshah/buz/src/components/Message.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":54,"column":6,"nodeType":"39","endLine":54,"endColumn":8,"suggestions":"40"},{"ruleId":"37","severity":1,"message":"41","line":45,"column":6,"nodeType":"39","endLine":45,"endColumn":10,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initializing'. Either include it or remove the dependency array.","ArrayExpression",["45"],"React Hook useEffect has a missing dependency: 'messages'. Either include it or remove the dependency array.",["46"],"no-global-assign","no-unsafe-negation",{"desc":"47","fix":"48"},{"desc":"49","fix":"50"},"Update the dependencies array to be: [initializing]",{"range":"51","text":"52"},"Update the dependencies array to be: [db, messages]",{"range":"53","text":"54"},[1416,1418],"[initializing]",[1265,1269],"[db, messages]"]