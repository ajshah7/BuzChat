{"version":3,"sources":["components/Button.js","components/Message.js","components/Channel.js","App.js","reportWebVitals.js","index.js"],"names":["Button","onClick","children","variant","color","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","backgroundColor","palette","text","secondary","avatar","red","Message","createdAt","displayName","photoURL","classes","className","Grid","container","justify","item","xs","sm","Paper","Card","style","CardHeader","Avatar","aria-label","src","alt","width","height","title","subheader","seconds","formatRelative","Date","CardContent","Typography","component","Channel","user","db","useState","messages","setMessages","newMessage","setNewMessage","setColor","uid","useEffect","messageBody","document","querySelector","scrollTop","scrollHeight","clientHeight","collection","orderBy","limit","onSnapshot","querySnapshot","data","docs","map","doc","id","console","log","message","onSubmit","e","preventDefault","add","firebase","firestore","FieldValue","serverTimestamp","type","name","value","onChange","target","placeholder","disabled","textAlign","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","App","currentUser","setUser","initializing","setInitializing","onAuthStateChanged","signInWithGoogle","a","provider","GoogleAuthProvider","useDeviceLanguage","signInWithPopup","error","signOut","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e67cf0b1.chunk.js","sourcesContent":["import React from \"react\";\nimport Buttons from \"@material-ui/core/Button\";\n\nconst Button = ({ onClick = null, children = null }) => (\n  <Buttons onClick={onClick} variant=\"contained\" color=\"primary\">\n    {children}\n  </Buttons>\n);\n\nexport default Button;\n","import React from \"react\";\nimport { formatRelative } from \"date-fns\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(1),\n    backgroundColor: \"transparent\",\n\n    color: theme.palette.text.secondary,\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nconst Message = ({\n  createdAt = null,\n  text = \"\",\n  displayName = \"\",\n  photoURL = \"\",\n  color = \"\",\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1} justify=\"center\">\n        <Grid item xs={12} sm={6}>\n          <Paper className={classes.paper}>\n            <Card className={classes.root} style={{ backgroundColor: color }}>\n              <CardHeader\n                avatar={\n                  <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                    {photoURL ? (\n                      <img src={photoURL} alt=\"Avatar\" width={45} height={45} />\n                    ) : (\n                      \"A\"\n                    )}\n                  </Avatar>\n                }\n                title={displayName ? <p>{displayName}</p> : null}\n                subheader={\n                  createdAt?.seconds ? (\n                    <span>\n                      {formatRelative(\n                        new Date(createdAt.seconds * 1000),\n                        new Date()\n                      )}\n                    </span>\n                  ) : null\n                }\n              />\n\n              <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  {text}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Message;\n","import React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase/app\";\nimport Message from \"./Message\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(1),\n    backgroundColor: \"transparent\",\n\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction Channel({ user, db }) {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  const [color, setColor] = useState(\"\");\n\n  const { uid, displayName, photoURL } = user;\n  useEffect(() => {\n    var messageBody = document.querySelector(\"#messageBody\");\n    messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;\n    if (db) {\n      const unsubscribe = db\n        .collection(\"messages\")\n        .orderBy(\"createdAt\")\n        .limit(100)\n        .onSnapshot((querySnapshot) => {\n          const data = querySnapshot.docs.map((doc) => ({\n            ...doc.data(),\n            id: doc.id,\n          }));\n          setMessages(data);\n          console.log(\"*\", messages);\n        });\n      return unsubscribe;\n    }\n  }, [db]);\n\n  const handleOnChange = (e) => {\n    setNewMessage(e.target.value);\n  };\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    const colors = [\n      { color: \"red\" },\n      { color: \"green\" },\n      { color: \"blue\" },\n      { color: \"yellow\" },\n    ];\n\n    colors.map((color) => setColor(color));\n\n    if (db) {\n      db.collection(\"messages\").add({\n        text: newMessage,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n        uid,\n        displayName,\n        photoURL,\n        color,\n      });\n    }\n  };\n  const classes = useStyles();\n  return (\n    <>\n      <div className=\"messageScroller\" id=\"messageBody\">\n        {messages.map((message) => (\n          <div key={message.id}>\n            {\" \"}\n            <Message {...message} />\n          </div>\n        ))}\n      </div>\n\n      <Grid container spacing={1} justify=\"center\">\n        <Grid item xs={12} sm={6}>\n          <Paper className={classes.paper}>\n            <form onSubmit={handleOnSubmit} className=\"formContainer\">\n              <input\n                className=\"inputField\"\n                type=\"text\"\n                name=\"message\"\n                value={newMessage}\n                onChange={handleOnChange}\n                placeholder=\"Enter you messages\"\n              />\n              <button\n                className=\"sendButton\"\n                type=\"submit\"\n                disabled={!newMessage}\n              >\n                {\" \"}\n                Sent\n              </button>\n            </form>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default Channel;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"./components/Button\";\nimport Channel from \"./components/Channel\";\nimport \"./App.css\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(1),\n    color: \"blue\",\n    textAlign: \"center\",\n    height: \"100vh\",\n  },\n}));\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyB9Zh-j_0ORyoLTKTm5CmmAdsEl698tvJg\",\n  authDomain: \"buzchat-bcf23.firebaseapp.com\",\n  projectId: \"buzchat-bcf23\",\n  storageBucket: \"buzchat-bcf23.appspot.com\",\n  messagingSenderId: \"640695160081\",\n  appId: \"1:640695160081:web:978c7655b323ab0a0590b0\",\n  measurementId: \"G-YDMVJ48QEC\",\n});\n\nconst auth = firebase.auth();\nconst db = firebase.firestore();\nfunction App() {\n  const classes = useStyles();\n  const [user, setUser] = useState(() => auth.currentUser);\n  const [initializing, setInitializing] = useState(true);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(null);\n      }\n      if (initializing) {\n        setInitializing(false);\n      }\n    });\n    return unsubscribe;\n  }, []);\n  const signInWithGoogle = async () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n\n    auth.useDeviceLanguage();\n    try {\n      await auth.signInWithPopup(provider);\n      console.log(\"hi\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const signOut = async () => {\n    try {\n      await firebase.auth().signOut();\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  if (initializing)\n    return (\n      <p style={{ color: \"white\", textAlign: \"center\" }}>Loading chat..</p>\n    );\n\n  return (\n    <div style={{ color: \"black\" }}>\n      {user ? (\n        <>\n          <div className=\"navbar\">\n            <ul>\n              <li>\n                {\" \"}\n                <h2>BuzzChat</h2>\n              </li>\n\n              <li className=\"signOut\">\n                <Button onClick={signOut}> Sign out </Button>\n              </li>\n            </ul>\n          </div>\n          <br />\n\n          <Channel user={user} db={db} />\n        </>\n      ) : (\n        <Grid container spacing={1} justify=\"center\">\n          <Grid item xs={11} sm={6}>\n            <Paper className={classes.paper}>\n              <div className=\"signInButton\">\n                <h1 className=\"signInHeader\">Welcome to BuzChat</h1>\n                <Button className=\"signInButton\" onClick={signInWithGoogle}>\n                  {\" \"}\n                  Sign in with google{\" \"}\n                </Button>\n              </div>\n            </Paper>\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}